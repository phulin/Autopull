service: autopull

provider:
  name: aws
  runtime: python3.7
  timeout: 360
  memorySize: 1024
  environment:
    STAGE: ${self:custom.stage}
    RESULTS_BUCKET: journal-tools-autopull-results-${self:custom.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:HeadBucket
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetObject
      Resource:
        - arn:aws:s3:::journal-tools-autopull-uploads-${self:custom.stage}
        - arn:aws:s3:::journal-tools-autopull-uploads-${self:custom.stage}/*
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:*Object
        - s3:*ObjectAcl
        - s3:AbortMultipartUpload
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
      Resource:
        - arn:aws:s3:::journal-tools-autopull-results-${self:custom.stage}
        - arn:aws:s3:::journal-tools-autopull-results-${self:custom.stage}/*
    - Effect: Allow
      Action:
        - sqs:ListQueues
        - sqs:GetQueueUrl
        - sqs:GetQueueAttributes
        - sqs:ReceiveMessage
        - sqs:SendMessage
        - sqs:SendMessageBatch
        - sqs:DeleteMessage
        - sqs:DeleteMessageBatch
      Resource:
        - "*"

resources:
  Outputs:
    S3UploadsExport:
      Export:
        Name: S3Uploads-${self:custom.stage}
      Value: journal-tools-autopull-uploads-${self:custom.stage}
    S3ResultsExport:
      Export:
        Name: S3Results-${self:custom.stage}
      Value: journal-tools-autopull-results-${self:custom.stage}

# you can add packaging information here
package:
  exclude:
    - .eggs/**
    - .git/**
    - dist/**
    - apps/**
    - test/**
    - build/**
    - node_modules/**
    - "**/*.docx"
    - "**/*.xlsx"
    - "**/*.pyc"
    - "**/*.icns"
    - footnotes/*.pyc
    - footnotes/config_development.json
    - "**/__pycache__/**"
    - venv/**
    - venv_package/**
    - reporters-db/reporters_db/data/reporters.csv
  include:
    - /*.py
    - footnotes/*.py
    - footnotes/abbreviations.txt
    - footnotes/config.json
    - reporters-db/reporters_db/data/reporters.json

functions:
  makePullSpreadsheet:
    handler: handler.pull
    events:
      - s3:
          bucket: journal-tools-autopull-uploads-${self:custom.stage}
          event: s3:ObjectCreated:*
          rules:
            - prefix: pull/
    layers:
      - Ref: AutopullDepsLambdaLayer
      - Ref: LxmlLambdaLayer
  applyPermaLinks:
    handler: handler.perma
    events:
      - s3:
          bucket: journal-tools-autopull-uploads-${self:custom.stage}
          event: s3:ObjectCreated:*
          rules:
            - prefix: perma/
    layers:
      - Ref: AutopullDepsLambdaLayer
      - Ref: LxmlLambdaLayer
  bluebook:
    handler: handler.bluebook
    events:
      - s3:
          bucket: journal-tools-autopull-uploads-${self:custom.stage}
          event: s3:ObjectCreated:*
          rules:
            - prefix: bluebook/
    layers:
      - Ref: AutopullDepsLambdaLayer
      - Ref: LxmlLambdaLayer

layers:
  autopullDeps:
    path: deps
    compatibleRuntimes:
      - python3.7
  lxml:
    path: lxml_layer
    compatibleRuntimes:
      - python3.7

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
