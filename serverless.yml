service: autopull

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.6
  timeout: 180
  memorySize: 1024
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:HeadBucket
      Resource:
        - "*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetObject
      Resource:
        - arn:aws:s3:::autopull-uploads
        - arn:aws:s3:::autopull-uploads/*
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:*Object
        - s3:*ObjectAcl
        - s3:AbortMultipartUpload
        - s3:ListBucketMultipartUploads
        - s3:ListMultipartUploadParts
      Resource:
        - arn:aws:s3:::autopull-results
        - arn:aws:s3:::autopull-results/*
    - Effect: Allow
      Action:
        - sqs:ListQueues
        - sqs:GetQueueUrl
        - sqs:GetQueueAttributes
        - sqs:ReceiveMessage
        - sqs:SendMessage
        - sqs:SendMessageBatch
        - sqs:DeleteMessage
        - sqs:DeleteMessageBatch
      Resource:
        - "*"

resources:
  Resources:
    S3BucketAutopulluploads:
      Type: AWS::S3::Bucket
      Properties:
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
    S3BucketAutopullresults:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: autopull-results
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false


# you can add packaging information here
package:
  exclude:
    - .eggs/**
    - dist/**
    - apps/**
    - test/**
    - build/**
    - node_modules/**
    - /*.docx
    - /*.xlsx
    - /*.pyc
    - footnotes/*.pyc
    - footnotes/config_development.json
    - "**/__pycache__/**"
    - venv/**
  include:
    - /*.py
    - footnotes/*.py
    - footnotes/abbreviations.txt
    - footnotes/config.json
    - reporters-db/reporters_db/data/reporters.json

functions:
  makePullSpreadsheet:
    handler: handler.pull
    events:
      - s3:
          bucket: autopull-uploads
          event: s3:ObjectCreated:*
          rules:
            - prefix: pull/
    layers:
      - Ref: DepsLambdaLayer
      - Ref: LxmlLambdaLayer
  applyPermaLinks:
    handler: handler.perma
    events:
      - s3:
          bucket: autopull-uploads
          event: s3:ObjectCreated:*
          rules:
            - prefix: perma/
    layers:
      - Ref: DepsLambdaLayer
      - Ref: LxmlLambdaLayer

layers:
  deps:
    path: deps
    compatibleRuntimes:
      - python3.6
  lxml:
    path: lxml_layer
    compatibleRuntimes:
      - python3.6
